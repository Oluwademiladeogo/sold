{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"_message":"login validation failed","errors":{"phone":{"kind":"required","message":"Path `phone` is required.","name":"ValidatorError","path":"phone","properties":{"message":"Path `phone` is required.","path":"phone","type":"required"}}},"level":"error","message":"login validation failed: phone: Path `phone` is required. login validation failed: phone: Path `phone` is required.","stack":"ValidationError: login validation failed: phone: Path `phone` is required.\n    at model.Document.invalidate (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongoose\\lib\\document.js:3153:32)\n    at C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongoose\\lib\\document.js:2946:17\n    at C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"_message":"login validation failed","errors":{"phone":{"kind":"required","message":"Path `phone` is required.","name":"ValidatorError","path":"phone","properties":{"message":"Path `phone` is required.","path":"phone","type":"required"}}},"level":"error","message":"login validation failed: phone: Path `phone` is required. login validation failed: phone: Path `phone` is required.","stack":"ValidationError: login validation failed: phone: Path `phone` is required.\n    at model.Document.invalidate (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongoose\\lib\\document.js:3153:32)\n    at C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongoose\\lib\\document.js:2946:17\n    at C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"error","message":"req.flash() requires sessions req.flash() requires sessions","stack":"Error: req.flash() requires sessions\n    at IncomingMessage._flash [as flash] (C:\\Users\\USER\\Desktop\\sold\\node_modules\\connect-flash\\lib\\flash.js:60:41)\n    at C:\\Users\\USER\\Desktop\\sold\\server\\routes\\signup.js:27:9\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"code":11000,"index":0,"keyPattern":{"phone":1},"keyValue":{"phone":"09157734301"},"level":"error","message":"E11000 duplicate key error collection: SOLD.logins index: phone_1 dup key: { phone: \"09157734301\" } E11000 duplicate key error collection: SOLD.logins index: phone_1 dup key: { phone: \"09157734301\" }","stack":"MongoServerError: E11000 duplicate key error collection: SOLD.logins index: phone_1 dup key: { phone: \"09157734301\" }\n    at C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\operations\\insert.js:50:33\n    at C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:331:21\n    at C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\sdam\\server.js:209:17\n    at handleOperationResult (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\sdam\\server.js:337:20)\n    at Connection.onMessage (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\cmap\\connection.js:206:9)\n    at MessageStream.<anonymous> (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:513:28)\n    at processIncomingData (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:391:12)"}
{"code":11000,"index":0,"keyPattern":{"phone":1},"keyValue":{"phone":"09157734301"},"level":"error","message":"E11000 duplicate key error collection: SOLD.logins index: phone_1 dup key: { phone: \"09157734301\" } E11000 duplicate key error collection: SOLD.logins index: phone_1 dup key: { phone: \"09157734301\" }","stack":"MongoServerError: E11000 duplicate key error collection: SOLD.logins index: phone_1 dup key: { phone: \"09157734301\" }\n    at C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\operations\\insert.js:50:33\n    at C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:331:21\n    at C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\sdam\\server.js:209:17\n    at handleOperationResult (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\sdam\\server.js:337:20)\n    at Connection.onMessage (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\cmap\\connection.js:206:9)\n    at MessageStream.<anonymous> (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:513:28)\n    at processIncomingData (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\USER\\Desktop\\sold\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:391:12)"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
{"level":"info","message":"Connected, server listening on port 3000"}
{"level":"info","message":"Connected to Mongodb"}
